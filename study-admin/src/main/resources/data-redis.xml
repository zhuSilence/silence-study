<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用redis 实现session cache 管理 -->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="100" />
        <property name="maxIdle" value="20" />
        <property name="minIdle" value="5" />
        <property name="maxWaitMillis" value="2000" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="false" />
        <!-- <property name="testWhileIdle" value="true"/> -->
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host"  value="${redis.host}" />
                    <constructor-arg name="port"  value="${redis.port}" />
                    <constructor-arg name="timeout"  value="${redis.timeout}" />
                    <constructor-arg value="1" />
                    <property name="password" value="${redis.pass}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!-- RedisClientUtil -->
    <bean id="redisClientUtil" class="com.origin.eurybia.redis.RedisClientUtil">
        <property name="jedisPool" ref="shardedJedisPool"/>
    </bean>

    <!-- 缓存管理 -->
    <bean id="redisCacheMgr" class="com.origin.eurybia.redis.RedisCacheMgr">
        <property name="redisClientUtil" ref="redisClientUtil"/>
    </bean>

    <!-- session 管理 -->
    <bean id="redisSessionMgr" class="com.origin.eurybia.redis.RedisSessionMgr">
        <property name="redisClientUtil" ref="redisClientUtil"/>
    </bean>

    <aop:config proxy-target-class="true">
        <aop:aspect ref="redisCacheMgr">
            <aop:pointcut id="cachePointcut" expression="execution(public !void com.silence.study.admin.service..*.*(..)) &amp;&amp; @annotation(cache)" />
            <aop:around pointcut-ref="cachePointcut" method="proceed" />
        </aop:aspect>
        <!--<aop:aspect ref="cachePointCut" order="1000">&lt;!&ndash; order 参数控制 aop通知的优先级，值越小，优先级越高 ，在事务提交后删除缓存 &ndash;&gt;-->
            <!--<aop:pointcut id="deleteCachePointcut" expression="execution(* com.jarvis.cache_example.common.dao..*.*(..)) &amp;&amp; @annotation(cacheDelete)" />-->
            <!--<aop:after-returning pointcut-ref="deleteCachePointcut" method="deleteCache" returning="retVal"/>-->
        <!--</aop:aspect>-->
    </aop:config>

</beans>